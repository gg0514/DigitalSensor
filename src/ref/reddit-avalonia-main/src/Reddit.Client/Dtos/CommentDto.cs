using System.Text.Json.Serialization;
using Reddit.Client.Dtos.JsonConverters;

namespace Reddit.Client.Dtos;

public record CommentDto(
    [property: JsonPropertyName("subreddit_id")] string SubredditId,
    [property: JsonPropertyName("approved_at_utc")] object ApprovedAtUtc,
    [property: JsonPropertyName("author_is_blocked")] bool AuthorIsBlocked,
    [property: JsonPropertyName("comment_type")] object CommentType,
    [property: JsonPropertyName("awarders")] IReadOnlyList<object> Awarders,
    [property: JsonPropertyName("mod_reason_by")] object ModReasonBy,
    [property: JsonPropertyName("banned_by")] object BannedBy,
    [property: JsonPropertyName("author_flair_type")] string AuthorFlairType,
    [property: JsonPropertyName("total_awards_received")] int TotalAwardsReceived,
    [property: JsonPropertyName("subreddit")] string Subreddit,
    [property: JsonPropertyName("author_flair_template_id")] object AuthorFlairTemplateId,
    [property: JsonPropertyName("likes")] object Likes,

    [property: JsonPropertyName("replies")]
    [property: JsonConverter(typeof(RepliesJsonConverter))]
    KindData<ListingData<KindData<CommentDto>>>? Replies,

    [property: JsonPropertyName("user_reports")] IReadOnlyList<object> UserReports,
    [property: JsonPropertyName("saved")] bool Saved,
    [property: JsonPropertyName("id")] string Id,
    [property: JsonPropertyName("banned_at_utc")] object BannedAtUtc,
    [property: JsonPropertyName("mod_reason_title")] object ModReasonTitle,
    [property: JsonPropertyName("gilded")] int Gilded,
    [property: JsonPropertyName("archived")] bool Archived,
    [property: JsonPropertyName("collapsed_reason_code")] object CollapsedReasonCode,
    [property: JsonPropertyName("no_follow")] bool NoFollow,
    [property: JsonPropertyName("author")] string Author,
    [property: JsonPropertyName("can_mod_post")] bool CanModPost,
    [property: JsonPropertyName("created_utc")] double CreatedUtc,
    [property: JsonPropertyName("send_replies")] bool SendReplies,
    [property: JsonPropertyName("parent_id")] string ParentId,
    [property: JsonPropertyName("score")] int Score,
    [property: JsonPropertyName("author_fullname")] string AuthorFullname,
    [property: JsonPropertyName("approved_by")] object ApprovedBy,
    [property: JsonPropertyName("mod_note")] object ModNote,
    [property: JsonPropertyName("all_awardings")] IReadOnlyList<object> AllAwardings,
    [property: JsonPropertyName("collapsed")] bool Collapsed,
    [property: JsonPropertyName("body")] string Body,

    [property: JsonConverter(typeof(EditedJsonConverter))]
    [property: JsonPropertyName("edited")] long? Edited,

    [property: JsonPropertyName("top_awarded_type")] object TopAwardedType,
    [property: JsonPropertyName("author_flair_css_class")] object AuthorFlairCssClass,
    [property: JsonPropertyName("name")] string Name,
    [property: JsonPropertyName("is_submitter")] bool IsSubmitter,
    [property: JsonPropertyName("downs")] int Downs,
    [property: JsonPropertyName("author_flair_richtext")] IReadOnlyList<object> AuthorFlairRichtext,
    [property: JsonPropertyName("author_patreon_flair")] bool AuthorPatreonFlair,
    [property: JsonPropertyName("body_html")] string BodyHtml,
    [property: JsonPropertyName("removal_reason")] object RemovalReason,
    [property: JsonPropertyName("collapsed_reason")] object CollapsedReason,
    [property: JsonPropertyName("distinguished")] object Distinguished,
    [property: JsonPropertyName("associated_award")] object AssociatedAward,
    [property: JsonPropertyName("stickied")] bool Stickied,
    [property: JsonPropertyName("author_premium")] bool AuthorPremium,
    [property: JsonPropertyName("can_gild")] bool CanGild,
    [property: JsonPropertyName("gildings")] Gildings Gildings,
    [property: JsonPropertyName("unrepliable_reason")] object UnrepliableReason,
    [property: JsonPropertyName("author_flair_text_color")] object AuthorFlairTextColor,
    [property: JsonPropertyName("score_hidden")] bool ScoreHidden,
    [property: JsonPropertyName("permalink")] string Permalink,
    [property: JsonPropertyName("subreddit_type")] string SubredditType,
    [property: JsonPropertyName("locked")] bool Locked,
    [property: JsonPropertyName("report_reasons")] object ReportReasons,
    [property: JsonPropertyName("created")] double Created,
    [property: JsonPropertyName("author_flair_text")] object AuthorFlairText,
    [property: JsonPropertyName("treatment_tags")] IReadOnlyList<object> TreatmentTags,
    [property: JsonPropertyName("link_id")] string LinkId,
    [property: JsonPropertyName("subreddit_name_prefixed")] string SubredditNamePrefixed,
    [property: JsonPropertyName("controversiality")] int Controversiality,
    [property: JsonPropertyName("depth")] int Depth,
    [property: JsonPropertyName("author_flair_background_color")] object AuthorFlairBackgroundColor,
    [property: JsonPropertyName("collapsed_because_crowd_control")] object CollapsedBecauseCrowdControl,
    [property: JsonPropertyName("mod_reports")] IReadOnlyList<object> ModReports,
    [property: JsonPropertyName("num_reports")] object NumReports,
    [property: JsonPropertyName("ups")] int Ups
);
