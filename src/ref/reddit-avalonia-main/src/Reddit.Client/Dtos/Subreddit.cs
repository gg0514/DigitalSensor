using System.Text.Json.Serialization;

namespace Reddit.Client.Dtos;

public record Subreddit(
    [property: JsonPropertyName("user_flair_background_color")] string UserFlairBackgroundColor,
    [property: JsonPropertyName("submit_text_html")] string SubmitTextHtml,
    [property: JsonPropertyName("restrict_posting")] bool RestrictPosting,
    [property: JsonPropertyName("user_is_banned")] bool UserIsBanned,
    [property: JsonPropertyName("free_form_reports")] bool FreeFormReports,
    [property: JsonPropertyName("wiki_enabled")] bool? WikiEnabled,
    [property: JsonPropertyName("user_is_muted")] bool UserIsMuted,
    [property: JsonPropertyName("user_can_flair_in_sr")] object UserCanFlairInSr,
    [property: JsonPropertyName("display_name")] string DisplayName,
    [property: JsonPropertyName("header_img")] string HeaderImg,
    [property: JsonPropertyName("title")] string Title,
    [property: JsonPropertyName("allow_galleries")] bool AllowGalleries,
    [property: JsonPropertyName("icon_size")] IReadOnlyList<int> IconSize,
    [property: JsonPropertyName("primary_color")] string PrimaryColor,
    [property: JsonPropertyName("active_user_count")] object ActiveUserCount,
    [property: JsonPropertyName("icon_img")] string IconImg,
    [property: JsonPropertyName("display_name_prefixed")] string DisplayNamePrefixed,
    [property: JsonPropertyName("accounts_active")] object AccountsActive,
    [property: JsonPropertyName("public_traffic")] bool PublicTraffic,
    [property: JsonPropertyName("subscribers")] int Subscribers,
    [property: JsonPropertyName("user_flair_richtext")] IReadOnlyList<UserFlairRichtext> UserFlairRichtext,
    [property: JsonPropertyName("videostream_links_count")] int VideostreamLinksCount,
    [property: JsonPropertyName("name")] string Name,
    [property: JsonPropertyName("quarantine")] bool Quarantine,
    [property: JsonPropertyName("hide_ads")] bool HideAds,
    [property: JsonPropertyName("prediction_leaderboard_entry_type")] int PredictionLeaderboardEntryType,
    [property: JsonPropertyName("emojis_enabled")] bool EmojisEnabled,
    [property: JsonPropertyName("advertiser_category")] string AdvertiserCategory,
    [property: JsonPropertyName("public_description")] string PublicDescription,
    [property: JsonPropertyName("comment_score_hide_mins")] int CommentScoreHideMins,
    [property: JsonPropertyName("allow_predictions")] bool AllowPredictions,
    [property: JsonPropertyName("user_has_favorited")] bool UserHasFavorited,
    [property: JsonPropertyName("user_flair_template_id")] object UserFlairTemplateId,
    [property: JsonPropertyName("community_icon")] string CommunityIcon,
    [property: JsonPropertyName("banner_background_image")] string BannerBackgroundImage,
    [property: JsonPropertyName("original_content_tag_enabled")] bool OriginalContentTagEnabled,
    [property: JsonPropertyName("community_reviewed")] bool CommunityReviewed,
    [property: JsonPropertyName("submit_text")] string SubmitText,
    [property: JsonPropertyName("description_html")] string DescriptionHtml,
    [property: JsonPropertyName("spoilers_enabled")] bool SpoilersEnabled,
    [property: JsonPropertyName("comment_contribution_settings")] CommentContributionSettings CommentContributionSettings,
    [property: JsonPropertyName("allow_talks")] bool AllowTalks,
    [property: JsonPropertyName("header_size")] IReadOnlyList<int> HeaderSize,
    [property: JsonPropertyName("is_default_banner")] bool IsDefaultBanner,
    [property: JsonPropertyName("user_flair_position")] string UserFlairPosition,
    [property: JsonPropertyName("is_default_icon")] IReadOnlyList<bool> IsDefaultIcon,
    [property: JsonPropertyName("all_original_content")] bool AllOriginalContent,
    [property: JsonPropertyName("has_menu_widget")] bool HasMenuWidget,
    [property: JsonPropertyName("is_enrolled_in_new_modmail")] object IsEnrolledInNewModmail,
    [property: JsonPropertyName("key_color")] string KeyColor,
    [property: JsonPropertyName("can_assign_user_flair")] bool CanAssignUserFlair,
    [property: JsonPropertyName("created")] double Created,
    [property: JsonPropertyName("wls")] int? Wls,
    [property: JsonPropertyName("show_media_preview")] bool ShowMediaPreview,
    [property: JsonPropertyName("submission_type")] string SubmissionType,
    [property: JsonPropertyName("user_is_subscriber")] bool UserIsSubscriber,
    [property: JsonPropertyName("allowed_media_in_comments")] IReadOnlyList<string> AllowedMediaInComments,
    [property: JsonPropertyName("allow_videogifs")] bool AllowVideogifs,
    [property: JsonPropertyName("should_archive_posts")] bool ShouldArchivePosts,
    [property: JsonPropertyName("user_flair_type")] string UserFlairType,
    [property: JsonPropertyName("allow_polls")] bool AllowPolls,
    [property: JsonPropertyName("collapse_deleted_comments")] bool CollapseDeletedComments,
    [property: JsonPropertyName("emojis_custom_size")] IReadOnlyList<int> EmojisCustomSize,
    [property: JsonPropertyName("public_description_html")] string PublicDescriptionHtml,
    [property: JsonPropertyName("allow_videos")] bool AllowVideos,
    [property: JsonPropertyName("is_crosspostable_subreddit")] bool? IsCrosspostableSubreddit,
    [property: JsonPropertyName("notification_level")] string NotificationLevel,
    [property: JsonPropertyName("should_show_media_in_comments_setting")] bool ShouldShowMediaInCommentsSetting,
    [property: JsonPropertyName("can_assign_link_flair")] bool CanAssignLinkFlair,
    [property: JsonPropertyName("accounts_active_is_fuzzed")] bool AccountsActiveIsFuzzed,
    [property: JsonPropertyName("allow_prediction_contributors")] bool AllowPredictionContributors,
    [property: JsonPropertyName("submit_text_label")] string SubmitTextLabel,
    [property: JsonPropertyName("link_flair_position")] string LinkFlairPosition,
    [property: JsonPropertyName("user_sr_flair_enabled")] object UserSrFlairEnabled,
    [property: JsonPropertyName("user_flair_enabled_in_sr")] bool UserFlairEnabledInSr,
    [property: JsonPropertyName("allow_discovery")] bool AllowDiscovery,
    [property: JsonPropertyName("accept_followers")] bool AcceptFollowers,
    [property: JsonPropertyName("user_sr_theme_enabled")] bool UserSrThemeEnabled,
    [property: JsonPropertyName("link_flair_enabled")] bool LinkFlairEnabled,
    [property: JsonPropertyName("disable_contributor_requests")] bool DisableContributorRequests,
    [property: JsonPropertyName("subreddit_type")] string SubredditType,
    [property: JsonPropertyName("suggested_comment_sort")] string SuggestedCommentSort,
    [property: JsonPropertyName("banner_img")] string BannerImg,
    [property: JsonPropertyName("user_flair_text")] object UserFlairText,
    [property: JsonPropertyName("banner_background_color")] string BannerBackgroundColor,
    [property: JsonPropertyName("show_media")] bool ShowMedia,
    [property: JsonPropertyName("id")] string Id,
    [property: JsonPropertyName("user_is_moderator")] bool UserIsModerator,
    [property: JsonPropertyName("over18")] bool Over18,
    [property: JsonPropertyName("header_title")] string HeaderTitle,
    [property: JsonPropertyName("description")] string Description,
    [property: JsonPropertyName("submit_link_label")] string SubmitLinkLabel,
    [property: JsonPropertyName("user_flair_text_color")] string UserFlairTextColor,
    [property: JsonPropertyName("restrict_commenting")] bool RestrictCommenting,
    [property: JsonPropertyName("user_flair_css_class")] object UserFlairCssClass,
    [property: JsonPropertyName("allow_images")] bool AllowImages,
    [property: JsonPropertyName("lang")] string Lang,
    [property: JsonPropertyName("whitelist_status")] string WhitelistStatus,
    [property: JsonPropertyName("url")] string Url,
    [property: JsonPropertyName("created_utc")] double CreatedUtc,
    [property: JsonPropertyName("banner_size")] IReadOnlyList<int> BannerSize,
    [property: JsonPropertyName("mobile_banner_image")] string MobileBannerImage,
    [property: JsonPropertyName("user_is_contributor")] bool UserIsContributor,
    [property: JsonPropertyName("allow_predictions_tournament")] bool AllowPredictionsTournament
);
